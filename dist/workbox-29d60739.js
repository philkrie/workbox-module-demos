define("./workbox-29d60739.js",["exports"],(function(e){"use strict";try{self["workbox:core:5.0.0-beta.0"]&&_()}catch(e){}const t={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:registration.scope},n=e=>[t.prefix,e,t.suffix].filter(e=>e&&e.length>0).join("-"),s={updateDetails:e=>{(e=>{for(const n of Object.keys(t))e(n)})(n=>{"string"==typeof e[n]&&(t[n]=e[n])})},getGoogleAnalyticsName:e=>e||n(t.googleAnalytics),getPrecacheName:e=>e||n(t.precache),getPrefix:()=>t.prefix,getRuntimeName:e=>e||n(t.runtime),getSuffix:()=>t.suffix},c=e=>{const t=new URL(String(e),location.href);return t.origin===location.origin?t.pathname:t.href},r=(e,...t)=>{let n=e;return t.length>0&&(n+=` :: ${JSON.stringify(t)}`),n};class i extends Error{constructor(e,t){super(r(e,t)),this.name=e,this.details=t}}const a=new Set;const o=(e,t)=>e.filter(e=>t in e),l=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:c=[]})=>{const r=await caches.open(e),i=await h({plugins:c,request:t,mode:"read"});let a=await r.match(i,s);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;a=await c.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:a,request:i})}return a},u=async({request:e,response:t,event:n,plugins:s=[]})=>{let c=t,r=!1;for(let t of s)if("cacheWillUpdate"in t){r=!0;const s=t.cacheWillUpdate;if(!(c=await s.call(t,{request:e,response:c,event:n})))break}return r||(c=c&&200===c.status?c:void 0),c||null},h=async({request:e,mode:t,plugins:n=[]})=>{const s=o(n,"cacheKeyWillBeUsed");let c=e;for(const e of s)"string"==typeof(c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}))&&(c=new Request(c));return c},f={put:async({cacheName:e,request:t,response:n,event:s,plugins:r=[],matchOptions:f})=>{const w=await h({plugins:r,request:t,mode:"write"});if(!n)throw new i("cache-put-with-no-response",{url:c(w.url)});let d=await u({event:s,plugins:r,response:n,request:w});if(!d)return;const p=await caches.open(e),y=o(r,"cacheDidUpdate");let g=y.length>0?await l({cacheName:e,matchOptions:f,request:w}):null;try{await p.put(w,d)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of a)await e()}(),e}for(let t of y)await t.cacheDidUpdate.call(t,{cacheName:e,event:s,oldResponse:g,newResponse:d,request:w})},match:l},w={fetch:async({request:e,fetchOptions:t,event:n,plugins:s=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const c=o(s,"fetchDidFail"),r=c.length>0?e.clone():null;try{for(let t of s)if("requestWillFetch"in t){const s=t.requestWillFetch,c=e.clone();e=await s.call(t,{request:c,event:n})}}catch(e){throw new i("plugin-error-request-will-fetch",{thrownError:e})}let a=e.clone();try{let c;c="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of s)"fetchDidSucceed"in e&&(c=await e.fetchDidSucceed.call(e,{event:n,request:a,response:c}));return c}catch(e){for(const t of c)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:r.clone(),request:a.clone()});throw e}}};let d;async function p(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},c=t?t(s):s,r=function(){if(void 0===d){const e=new Response("");if("body"in e)try{new Response(e.body),d=!0}catch(e){d=!1}d=!1}return d}()?n.body:await n.blob();return new Response(r,c)}try{self["workbox:precaching:5.0.0-beta.0"]&&_()}catch(e){}const y="__WB_REVISION__";function g(e){if(!e)throw new i("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new i("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(n,location.href),c=new URL(n,location.href);return s.searchParams.set(y,t),{cacheKey:s.href,url:c.href}}class R{constructor(e){this.t=s.getPrecacheName(e),this.s=new Map,this.i=new Map}addToCacheList(e){for(const t of e){const{cacheKey:e,url:n}=g(t);if(this.s.has(n)&&this.s.get(n)!==e)throw new i("add-to-cache-list-conflicting-entries",{firstEntry:this.s.get(n),secondEntry:e});if("string"!=typeof t&&t.integrity){if(this.i.has(e)&&this.i.get(e)!==t.integrity)throw new i("add-to-cache-list-conflicting-integrities",{url:n});this.i.set(e,t.integrity)}this.s.set(n,e)}}async install({event:e,plugins:t}={}){const n=[],s=[],c=await caches.open(this.t),r=await c.keys(),i=new Set(r.map(e=>e.url));for(const[e,t]of this.s)i.has(t)?s.push(e):n.push({cacheKey:t,url:e});const a=n.map(({cacheKey:n,url:s})=>{const c=this.i.get(n);return this.o({cacheKey:n,event:e,plugins:t,url:s,integrity:c})});return await Promise.all(a),{updatedURLs:n.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await caches.open(this.t),t=await e.keys(),n=new Set(this.s.values()),s=[];for(const c of t)n.has(c.url)||(await e.delete(c),s.push(c.url));return{deletedURLs:s}}async o({cacheKey:e,url:t,event:n,plugins:s,integrity:c}){const r=new Request(t,{integrity:c,cache:"reload",credentials:"same-origin"});let a,o=await w.fetch({event:n,plugins:s,request:r});for(const e of s||[])"cacheWillUpdate"in e&&(a=e);if(!(a?a.cacheWillUpdate({event:n,request:r,response:o}):o.status<400))throw new i("bad-precaching-response",{url:t,status:o.status});o.redirected&&(o=await p(o)),await f.put({event:n,plugins:s,response:o,request:e===t?r:new Request(e),cacheName:this.t,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.s}getCachedURLs(){return[...this.s.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.s.get(t.href)}createHandlerForURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new i("non-precached-url",{url:e});return async()=>{try{const e=await caches.open(this.t),n=await e.match(t);if(n)return n;throw new Error(`The cache ${this.t} did not have an entry `+`for ${t}.`)}catch(e){return fetch(t)}}}}let v;const m=()=>(v||(v=new R),v);const L=(e,t)=>{const n=m().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:c}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(r,t);if(yield i.href,n&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=n,yield e.href}if(s){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:r});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let U=!1;const q=e=>{U||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:n=!0,urlManipulation:c}={})=>{const r=s.getPrecacheName();addEventListener("fetch",s=>{const i=L(s.request.url,{cleanURLs:n,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:c});if(!i)return;let a=caches.open(r).then(e=>e.match(i)).then(e=>e||fetch(i));s.respondWith(a)})})(e),U=!0)},x=[],E={get:()=>x,add(e){x.push(...e)}},K=e=>{const t=m(),n=E.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},N=e=>{const t=m();e.waitUntil(t.activate())};e.clientsClaim=()=>{addEventListener("activate",()=>self.clients.claim())},e.precacheAndRoute=(e,t)=>{(e=>{m().addToCacheList(e),e.length>0&&(addEventListener("install",K),addEventListener("activate",N))})(e),q(t)},e.skipWaiting=()=>{addEventListener("install",()=>self.skipWaiting())}}));
//# sourceMappingURL=workbox-29d60739.js.map
